<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="EDM-VM-CL01" failures="0" tests="22" name="tests.TestUserSecurityAccess" time="19.756" errors="1" timestamp="2023-10-30T05:54:48 IST" skipped="21">
  <testcase classname="tests.TestUserSecurityAccess" name="TestVerifyBrowseFileSystem" time="0.000">
    <skipped/>
  </testcase> <!-- TestVerifyBrowseFileSystem -->
  <system-out/>
  <testcase classname="tests.TestUserSecurityAccess" name="beforeSuite" time="19.756">
    <error message="Could not start a new session. Response code 500. Message: session not created: Chrome failed to start: exited normally.
  (session not created: DevToolsActivePort file doesn&#039;t exist)
  (The process started from chrome location C:\Program Files\Google\Chrome\Application\chrome.exe is no longer running, so ChromeDriver is assuming that Chrome has crashed.) 
Host info: host: &#039;EDM-VM-CL01&#039;, ip: &#039;10.102.65.242&#039;
Build info: version: &#039;4.11.0&#039;, revision: &#039;040bc5406b&#039;
System info: os.name: &#039;Windows 10&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;16.0.2&#039;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--disable-popup-blocking, --test-type, disable-infobars, --remote-allow-origins=*], binary: C:\Program Files\Google\Chr..., extensions: [], useAutomationExtension: false}}]}]" type="org.openqa.selenium.SessionNotCreatedException">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: Chrome failed to start: exited normally.
  (session not created: DevToolsActivePort file doesn't exist)
  (The process started from chrome location C:\Program Files\Google\Chrome\Application\chrome.exe is no longer running, so ChromeDriver is assuming that Chrome has crashed.) 
Host info: host: 'EDM-VM-CL01', ip: '10.102.65.242'
Build info: version: '4.11.0', revision: '040bc5406b'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--disable-popup-blocking, --test-type, disable-infobars, --remote-allow-origins=*], binary: C:\Program Files\Google\Chr..., extensions: [], useAutomationExtension: false}}]}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:140)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:96)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:68)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:163)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:232)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:159)
at org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:108)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)
at main.EDRM.hybridFramework.helper.browserConfigurations.ChromeBrowser.getChromeDriver(ChromeBrowser.java:32)
at main.EDRM.hybridFramework.TestBase.TestBase.getBrowserObject(TestBase.java:165)
at main.EDRM.hybridFramework.TestBase.TestBase.setUpDriver(TestBase.java:188)
at main.EDRM.hybridFramework.TestBase.TestBase.beforeSuite(TestBase.java:95)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:317)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- beforeSuite -->
  <system-out/>
  <testcase classname="tests.TestUserSecurityAccess" name="EditUserSecurityLevel" time="0.000">
    <skipped/>
  </testcase> <!-- EditUserSecurityLevel -->
  <system-out/>
  <testcase classname="tests.TestUserSecurityAccess" name="UpdateDocumentTypeSecurity" time="0.000">
    <skipped/>
  </testcase> <!-- UpdateDocumentTypeSecurity -->
  <system-out/>
  <testcase classname="tests.TestUserSecurityAccess" name="TestCaptureFormFilling" time="0.000">
    <skipped/>
  </testcase> <!-- TestCaptureFormFilling -->
  <system-out/>
  <testcase classname="tests.TestUserSecurityAccess" name="VerifyErrorInDistribute" time="0.000">
    <skipped/>
  </testcase> <!-- VerifyErrorInDistribute -->
  <system-out/>
  <testcase classname="tests.TestUserSecurityAccess" name="UpdateDocumentTypeSecurityToDefault" time="0.000">
    <skipped/>
  </testcase> <!-- UpdateDocumentTypeSecurityToDefault -->
  <system-out/>
  <testcase classname="tests.TestUserSecurityAccess" name="EditUserSecurityLevelOnceAgain" time="0.000">
    <skipped/>
  </testcase> <!-- EditUserSecurityLevelOnceAgain -->
  <system-out/>
  <testcase classname="tests.TestUserSecurityAccess" name="VerifyCheckInRight" time="0.000">
    <skipped/>
  </testcase> <!-- VerifyCheckInRight -->
  <system-out/>
  <testcase classname="tests.TestUserSecurityAccess" name="VerifyNextEmailButton" time="0.000">
    <skipped/>
  </testcase> <!-- VerifyNextEmailButton -->
  <system-out/>
  <testcase classname="tests.TestUserSecurityAccess" name="TestLinkingAvailableSecurityUnchecked" time="0.000">
    <skipped/>
  </testcase> <!-- TestLinkingAvailableSecurityUnchecked -->
  <system-out/>
  <testcase classname="tests.TestUserSecurityAccess" name="TestLinkingAvailableSecurityChecked" time="0.000">
    <skipped/>
  </testcase> <!-- TestLinkingAvailableSecurityChecked -->
  <system-out/>
  <testcase classname="tests.TestUserSecurityAccess" name="TestDistributionSecurityRight" time="0.000">
    <skipped/>
  </testcase> <!-- TestDistributionSecurityRight -->
  <system-out/>
  <testcase classname="tests.TestUserSecurityAccess" name="TestVerifyDocSearchAcrossFileSystem">
    <skipped/>
  </testcase> <!-- TestVerifyDocSearchAcrossFileSystem -->
  <system-out/>
  <testcase classname="tests.TestUserSecurityAccess" name="TestVerifyDiffTaskDiffFileSystem">
    <skipped/>
  </testcase> <!-- TestVerifyDiffTaskDiffFileSystem -->
  <system-out/>
  <testcase classname="tests.TestUserSecurityAccess" name="TestBatchIndexDifferentFileSystem">
    <skipped/>
  </testcase> <!-- TestBatchIndexDifferentFileSystem -->
  <system-out/>
  <testcase classname="tests.TestUserSecurityAccess" name="RereferenceDocumentToDifferentFileSystem">
    <skipped/>
  </testcase> <!-- RereferenceDocumentToDifferentFileSystem -->
  <system-out/>
  <testcase classname="tests.TestUserSecurityAccess" name="TestVerifylogoutAllFileSystem">
    <skipped/>
  </testcase> <!-- TestVerifylogoutAllFileSystem -->
  <system-out/>
  <testcase classname="tests.TestUserSecurityAccess" name="TestFolder1RefSearchAcrossFileSystem">
    <skipped/>
  </testcase> <!-- TestFolder1RefSearchAcrossFileSystem -->
  <system-out/>
  <testcase classname="tests.TestUserSecurityAccess" name="TestNonAdminUserDeleteButtonAccess">
    <skipped/>
  </testcase> <!-- TestNonAdminUserDeleteButtonAccess -->
  <system-out/>
  <testcase classname="tests.TestUserSecurityAccess" name="TestVerifyUserBrowseOtherFileSystem">
    <skipped/>
  </testcase> <!-- TestVerifyUserBrowseOtherFileSystem -->
  <system-out/>
  <testcase classname="tests.TestUserSecurityAccess" name="TestLinkingAvailableSecurityCheckeddf">
    <skipped/>
  </testcase> <!-- TestLinkingAvailableSecurityCheckeddf -->
  <system-out/>
</testsuite> <!-- tests.TestUserSecurityAccess -->
